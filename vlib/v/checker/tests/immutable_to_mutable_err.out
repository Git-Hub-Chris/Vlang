vlib/v/checker/tests/immutable_to_mutable_err.vv:10:30: error: left-side of assignment expects a mutable reference, but variable `arr` is immutable, declare it with `mut` to make it mutable or clone it
    8 | fn main() {
    9 |     arr := [1, 2, 3] // declared as immutable!
   10 |     mut arr_mut := if true { arr } else { []int{} }
      |                              ~~~
   11 |     mut arr_mut2 := match true { true { arr } else { [0] } }
   12 |     arr_mut[0] = 999
vlib/v/checker/tests/immutable_to_mutable_err.vv:11:38: error: left-side of assignment expects a mutable reference, but variable `arr` is immutable, declare it with `mut` to make it mutable or clone it
    9 |     arr := [1, 2, 3] // declared as immutable!
   10 |     mut arr_mut := if true { arr } else { []int{} }
   11 |     mut arr_mut2 := match true { true { arr } else { [0] } }
      |                                         ~~~
   12 |     arr_mut[0] = 999
   13 |     arr_mut2[1] = 999
vlib/v/checker/tests/immutable_to_mutable_err.vv:19:15: error: use `mut array2 := array1.clone()` instead of `mut array2 := array1` (or use `unsafe`)
   17 | 
   18 |     a := Test{}
   19 |     mut arr_mut3 := a.foo
      |                  ~~
   20 |     arr_mut3[0] = 999
   21 |     assert a.foo == [1,2,3]
vlib/v/checker/tests/immutable_to_mutable_err.vv:23:15: error: use `mut array2 := array1.clone()` instead of `mut array2 := array1` (or use `unsafe`)
   21 |     assert a.foo == [1,2,3]
   22 | 
   23 |     mut arr_mut4 := a.bar
      |                  ~~
   24 |     arr_mut4[0] = 999
   25 |     assert a.bar == [1,2,3]
